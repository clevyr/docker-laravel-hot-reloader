name: Docker Build

on:
  schedule:
    - cron: "0 7 * * 1"
  push:
    branches: master

env:
  image: clevyr/laravel-hot-reloader

jobs:
  gen-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Generate Matrix
        id: gen-matrix
        run: |
          printf '::set-output name=matrix::%s' \
            "$(python3 ./scripts/versions.py "$image")"

  build:
    name: Build Node ${{ matrix.node_version }} Image
    runs-on: ubuntu-latest
    needs: [gen-matrix]
    strategy:
      matrix: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.node_version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.node_version }}-
            ${{ runner.os }}-buildx-

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          tags: |
            ${{ env.image }}:${{ matrix.node_version }}
            ${{ matrix.extra_tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  readme:
    name: Update DockerHub Description
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.image }}
